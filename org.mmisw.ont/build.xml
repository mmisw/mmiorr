<?xml version="1.0" encoding="utf-8" ?>
<project name="ont" default="war" basedir=".">

	<property file="version.properties" />
	<property file="build.properties" />
	<property name="build.dir" value="_generated" />

	<!-- set classpath -->
	<path id="project.class.path">
		<fileset dir="${appserver.lib}">
			<include name="servlet*.jar" />
		</fileset>
		<pathelement path="${java.class.path}/" />
		<fileset dir="WebContent/WEB-INF/lib">
			<include name="*.jar" />
			<exclude name="org.mmisw.ont.jar" />
			<include name="jena/*.jar" />
		</fileset>
	</path>

	<target name="init">
		<fail unless="aquaportal.jdbc.password" />
		<tstamp>
		    <format property="ont.build" pattern="yyyyMMddHHmm" />
		</tstamp>
	</target>

	<target name="compile" depends="init" description="compiles the project">
		<mkdir dir="${build.dir}/classes" />
		<javac srcdir="src" destdir="${build.dir}/classes" includes="**" debug="on" debuglevel="lines,vars,source"
			source="1.7" target="1.7"
			excludes="**/*_trailingFragment.java"
		>
			<classpath refid="project.class.path" />
		</javac>

		<copy file="src/org/mmisw/ont/version.properties" tofile="${build.dir}/classes/org/mmisw/ont/version.properties" overwrite="true">
			<filterset>
				<filter token="ont.version" value="${ont.version}" />
				<filter token="ont.build" value="${ont.build}" />
			</filterset>
		</copy>
	</target>

	<target name="jar" depends="compile">
		<mkdir dir="${build.dir}/lib" />
		<jar destfile="WebContent/WEB-INF/lib/org.mmisw.ont.jar">
			<fileset dir="${build.dir}/classes">
				<include name="**/*.class" />
				<include name="**/*.properties" />
			</fileset>
			<fileset dir="src">
				<include name="**/*.ttl" />
			</fileset>
		</jar>
	</target>

	<!-- ==================================================================== -->
	<!-- client library -->

	<target name="client-lib" depends="compile" description="creates the MMI Ont Client library">
		<mkdir dir="${build.dir}/lib" />
		<jar destfile="org.mmisw.ont.client.jar">
			<fileset dir="${build.dir}/classes">
				<include name="org/mmisw/ont/OntVersion.class" />
				<include name="org/mmisw/ont/version.properties" />
				<include name="org/mmisw/ont/mmiuri/MmiUri.class" />
				<include name="org/mmisw/ont/vocabulary/**/*.class" />
				<include name="org/mmisw/ont/JenaUtil2.class" />
				<include name="org/mmisw/ont/client/**/*.class" />
			</fileset>
		</jar>
	</target>


	<!-- ==================================================================== -->
	<!-- tests -->

	<macrodef name="testing">
		<attribute name="sources" />
		<sequential>
			<junit printsummary="yes" haltonfailure="yes" fork="yes" showoutput="yes" outputtoformatters="no">
				<formatter type="plain" usefile="no" />
				<classpath refid="project.class.path" />
				<classpath path="${build.dir}/classes" />
				<batchtest>
					<fileset dir="src">
						<include name="@{sources}" />
					</fileset>
				</batchtest>
			</junit>
		</sequential>
	</macrodef>

	<target name="mmiuriTests" depends="jar">
		<testing sources="**/mmiuri/test/*Test.java" />
	</target>

	<!-- all tests -->
	<target name="tests" depends="mmiuriTests" description="runs the available tests"/>


	<target name="prepare2war" depends="tests">
		<!-- prepare tmp.WebContent -->
		<copy todir="${build.dir}/tmp.WebContent">
			<fileset dir="WebContent">
				<exclude name="META-INF/context.xml" />
				<exclude name="WEB-INF/web.xml" />
				<exclude name="WEB-INF/lib**" />
				<exclude name="WEB-INF/classes/log4j.xml" />
			</fileset>
		</copy>

		<copy file="WebContent/META-INF/context.xml"
			tofile="${build.dir}/tmp.WebContent/META-INF/context.xml" overwrite="true">
			<filterset>
				<filter token="aquaportal.datasource.name" value="${aquaportal.datasource.name}" />
				<filter token="aquaportal.jdbc.driver" value="${aquaportal.jdbc.driver}" />
				<filter token="aquaportal.jdbc.username" value="${aquaportal.jdbc.username}" />
				<filter token="aquaportal.jdbc.password" value="${aquaportal.jdbc.password}" />
				<filter token="aquaportal.jdbc.url" value="${aquaportal.jdbc.url}" />
				<filter token="aquaportal.jdbc.maxactive" value="${aquaportal.jdbc.maxactive}" />
				<filter token="aquaportal.jdbc.maxidle" value="${aquaportal.jdbc.maxidle}" />
				<filter token="aquaportal.jdbc.maxwait" value="${aquaportal.jdbc.maxwait}" />
			</filterset>
		</copy>

		<copy file="WebContent/WEB-INF/web.xml"
			tofile="${build.dir}/tmp.WebContent/WEB-INF/web.xml" overwrite="true">
			<filterset>
				<filter token="appserver.host"   value="${appserver.host}" />
				<filter token="portal.service.url"  value="${portal.service.url}" />
				<filter token="aquaportal.datasource.name" value="${aquaportal.datasource.name}" />
				<filter token="aquaportal.uploads.directory" value="${aquaportal.uploads.directory}" />
				<filter token="aquaportal.voc2rdf.dir" value="${aquaportal.voc2rdf.dir}" />
				<filter token="aquaportal.datasource" value="${aquaportal.datasource}" />
				<filter token="aquaportal.rest.url" value="${aquaportal.rest.url}" />

				<filter token="virtuoso.host" value="${virtuoso.host}" />
				<filter token="virtuoso.username" value="${virtuoso.username}" />
				<filter token="virtuoso.password" value="${virtuoso.password}" />

				<filter token="jena.tdb.dir" value="${jena.tdb.dir}" />
				<filter token="jena.tdb.assembler" value="${jena.tdb.assembler}" />

				<filter token="agraph.version" value="${agraph.version}" />
				<filter token="agraph.host" value="${agraph.host}" />
				<filter token="agraph.port" value="${agraph.port}" />
				<filter token="agraph.ts.dir" value="${agraph.ts.dir}" />
				<filter token="agraph.ts.name" value="${agraph.ts.name}" />
				<filter token="agraph.username" value="${agraph.username}" />
				<filter token="agraph.password" value="${agraph.password}" />

				<filter token="ont.internal.dir"   value="${ont.internal.dir}" />
				<filter token="ga.uanumber"   value="${ga.uanumber}" />
				<filter token="ga.domainName" value="${ga.domainName}" />
				<filter token="ga.dir"        value="${ga.dir}" />
			</filterset>
		</copy>

		<copy file="WebContent/WEB-INF/classes/log4j.xml"
			tofile="${build.dir}/tmp.WebContent/WEB-INF/classes/log4j.xml" overwrite="true">
			<filterset>
				<filter token="ont.app.logfilepath"       value="${ont.app.logfilepath}" />
				<filter token="ont.app.maxlogfilesize"    value="${ont.app.maxlogfilesize}" />
				<filter token="ont.app.maxlogbackupindex" value="${ont.app.maxlogbackupindex}" />
				<filter token="ont.app.log.deflevel"      value="${ont.app.log.deflevel}" />
				<filter token="ont.app.log.ontlevel"      value="${ont.app.log.ontlevel}" />
			</filterset>
		</copy>

		<copy todir="${build.dir}/tmp.web-inf-lib" flatten="true">
			<fileset dir="WebContent/WEB-INF/lib">
				<include name="**/*.jar" />
			</fileset>
		</copy>

	</target>


	<target name="war" depends="prepare2war" description="creates ${build.dir}/ont.war">
		<war warfile="${build.dir}/ont.war" webxml="${build.dir}/tmp.WebContent/WEB-INF/web.xml">
			<fileset dir="${build.dir}/tmp.WebContent" />
			<lib dir="${build.dir}/tmp.web-inf-lib" />
		</war>

		<!-- remove temporary dirs -->
		<delete includeEmptyDirs="true" failonerror="false">
			<fileset dir="${build.dir}/tmp.web-inf-lib" />
			<fileset dir="${build.dir}/tmp.WebContent" />
		</delete>
	</target>

	<target name="deploy-war" description="copies the WAR to ${appserver.deploy.dir}">
		<copy file="${build.dir}/ont.war" todir="${appserver.deploy.dir}" preservelastmodified="true" />
	</target>

	<!-- ==================================================================== -->
	<target name="deploy-lib" depends="jar" description="deploys the MMI Ont Client library to maven repository">
		<copy file="resource/templ-pom.xml" tofile="_generated/tmp-pom.xml" overwrite="true">
			<filterset>
				<filter token="ont.version" value="${ont.version}" />
			</filterset>
		</copy>
		<exec executable="mvn">
			<arg value="--file" />
			<arg value="_generated/tmp-pom.xml" />
			<arg value="deploy" />
		</exec>
	</target>

	<target name="clean">
		<delete file="WebContent/WEB-INF/lib/org.mmisw.ont.jar" />
		<delete>
			<fileset dir="${build.dir}" includes="**/*.class" />
		</delete>
	</target>

</project>
